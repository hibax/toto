
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include "Algo.h"
#include "Action.h"
#include "Grid.h"
#include "Cell.h"
#include "Unit.h"
#include "Board.h"

using namespace std;

int main()
{
	int size;
	cin >> size; cin.ignore();
	int unitsPerPlayer;
	cin >> unitsPerPlayer; cin.ignore();

	int counter = 0;

	// game loop
	while (1) {

		vector<string> rows;

		for (int i = 0; i < size; i++) {
			string row;
			cin >> row; cin.ignore();
			rows.push_back(row);
		}
		vector<Unit> ourUnits;
		for (int i = 0; i < unitsPerPlayer; i++) {
			Cell pos;
			cin >> pos.row >> pos.column; cin.ignore();
			ourUnits.push_back(Unit(pos));
		}
		vector<Unit> otherUnits;
		for (int i = 0; i < unitsPerPlayer; i++) {
			Cell pos;
			cin >> pos.row >> pos.column; cin.ignore();
			otherUnits.push_back(Unit(pos));
		}

		vector<string> legalActions;

		int legalActionsSize;
		cin >> legalActionsSize; cin.ignore();
		for (int i = 0; i < legalActionsSize; i++) {
			string type;
			int index;
			string dir1;
			string dir2;
			cin >> type >> index >> dir1 >> dir2; cin.ignore();
			legalActions.push_back(type + " " + to_string(index) + " " + dir1 + " " + dir2);
		}

		vector<vector<int> > cells(size, vector<int>(size));
		Grid grid(cells, size);
		grid.fillGrid(grid, rows, size);


		Board board(grid, ourUnits, otherUnits, legalActions);

		// Write an action using cout. DON'T FORGET THE "<< endl"
		// To debug: cerr << "Debug messages..." << endl;
		counter++;
		cout << board.generateAction(counter) << endl;

	}
}